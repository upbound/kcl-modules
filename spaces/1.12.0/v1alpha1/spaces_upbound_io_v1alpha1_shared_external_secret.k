"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SharedExternalSecret:
    r"""
    SharedExternalSecret specifies a shared ExternalSecret projected into the specified
    ControlPlanes of the same namespace as ClusterExternalSecret and with that
    propagated into the specified namespaces.

    Attributes
    ----------
    apiVersion : str, default is "spaces.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SharedExternalSecret", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SpacesUpboundIoV1alpha1SharedExternalSecretSpec, default is Undefined, optional
        spec
    status : SpacesUpboundIoV1alpha1SharedExternalSecretStatus, default is Undefined, optional
        status
    """


    apiVersion: "spaces.upbound.io/v1alpha1" = "spaces.upbound.io/v1alpha1"

    kind: "SharedExternalSecret" = "SharedExternalSecret"

    metadata?: v1.ObjectMeta

    spec?: SpacesUpboundIoV1alpha1SharedExternalSecretSpec

    status?: SpacesUpboundIoV1alpha1SharedExternalSecretStatus


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpec:
    r"""
    SharedExternalSecretSpec defines the desired state of SharedExternalSecret.

    Attributes
    ----------
    controlPlaneSelector : SpacesUpboundIoV1alpha1SharedExternalSecretSpecControlPlaneSelector, default is Undefined, required
        control plane selector
    externalSecretMetadata : SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretMetadata, default is Undefined, optional
        external secret metadata
    externalSecretName : str, default is Undefined, optional
        ExternalSecretName is the name to use when creating external secret within a control plane.
        optional, if not set, SharedExternalSecret name will be used.
        When set, it is immutable.
    externalSecretSpec : SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpec, default is Undefined, required
        external secret spec
    namespaceSelector : SpacesUpboundIoV1alpha1SharedExternalSecretSpecNamespaceSelector, default is Undefined, required
        namespace selector
    refreshTime : str, default is Undefined, optional
        Used to configure secret refresh interval in seconds.
    """


    controlPlaneSelector: SpacesUpboundIoV1alpha1SharedExternalSecretSpecControlPlaneSelector

    externalSecretMetadata?: SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretMetadata

    externalSecretName?: str

    externalSecretSpec: SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpec

    namespaceSelector: SpacesUpboundIoV1alpha1SharedExternalSecretSpecNamespaceSelector

    refreshTime?: str


    check:
        len(externalSecretName) <= 253 if externalSecretName
        len(externalSecretName) >= 1 if externalSecretName


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecControlPlaneSelector:
    r"""
    The secret is projected only to control planes
    matching the provided selector. Either names or a labelSelector must be specified.

    Attributes
    ----------
    labelSelectors : [SpacesUpboundIoV1alpha1SharedExternalSecretSpecControlPlaneSelectorLabelSelectorsItems0], default is Undefined, optional
        A resource is matched if any of the label selector matches.
        In case when the list is empty, resource is matched too.
    names : [str], default is Undefined, optional
        A resource is selected if its metadata.name matches any of the provided names.
        In case when the list is empty, resource is matched too.
    """


    labelSelectors?: [SpacesUpboundIoV1alpha1SharedExternalSecretSpecControlPlaneSelectorLabelSelectorsItems0]

    names?: [str]


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecControlPlaneSelectorLabelSelectorsItems0:
    r"""
    A label selector is a label query over a set of resources. The result of matchLabels and
    matchExpressions are ANDed. An empty label selector matches all objects. A null
    label selector matches no objects.

    Attributes
    ----------
    matchExpressions : [SpacesUpboundIoV1alpha1SharedExternalSecretSpecControlPlaneSelectorLabelSelectorsItems0MatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [SpacesUpboundIoV1alpha1SharedExternalSecretSpecControlPlaneSelectorLabelSelectorsItems0MatchExpressionsItems0]

    matchLabels?: {str:str}


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecControlPlaneSelectorLabelSelectorsItems0MatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretMetadata:
    r"""
    The metadata of the secret store to be created.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations that are set on projected resource.
    labels : {str:str}, default is Undefined, optional
        Labels that are set on projected resource.
    """


    annotations?: {str:str}

    labels?: {str:str}


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpec:
    r"""
    The spec for the ExternalSecrets to be created.

    Attributes
    ----------
    data : [SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataItems0], default is Undefined, optional
        Data defines the connection between the Kubernetes Secret keys and the Provider data
    dataFrom : [SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0], default is Undefined, optional
        DataFrom is used to fetch all properties from a specific Provider data
        If multiple entries are specified, the Secret keys are merged in the specified order
    refreshInterval : str, default is "1h", optional
        RefreshInterval is the amount of time before the values are read again from the SecretStore provider
        Valid time units are "ns", "us" (or "Âµs"), "ms", "s", "m", "h"
        May be set to zero to fetch and create it once. Defaults to 1h.
    secretStoreRef : SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecSecretStoreRef, default is Undefined, optional
        secret store ref
    target : SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecTarget, default is Undefined, optional
        target
    """


    data?: [SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataItems0]

    dataFrom?: [SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0]

    refreshInterval?: str = "1h"

    secretStoreRef?: SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecSecretStoreRef

    target?: SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecTarget


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0:
    r"""
    spaces upbound io v1alpha1 shared external secret spec external secret spec data from items0

    Attributes
    ----------
    extract : SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0Extract, default is Undefined, optional
        extract
    find : SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0Find, default is Undefined, optional
        find
    rewrite : [SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0RewriteItems0], default is Undefined, optional
        Used to rewrite secret Keys after getting them from the secret Provider
        Multiple Rewrite operations can be provided. They are applied in a layered order (first to last)
    sourceRef : SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0SourceRef, default is Undefined, optional
        source ref
    """


    extract?: SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0Extract

    find?: SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0Find

    rewrite?: [SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0RewriteItems0]

    sourceRef?: SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0SourceRef


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0Extract:
    r"""
    Used to extract multiple key/value pairs from one secret
    Note: Extract does not support sourceRef.Generator or sourceRef.GeneratorRef.

    Attributes
    ----------
    conversionStrategy : str, default is "Default", optional
        Used to define a conversion Strategy
    decodingStrategy : str, default is "None", optional
        Used to define a decoding Strategy
    key : str, default is Undefined, required
        Key is the key used in the Provider, mandatory
    metadataPolicy : str, default is "None", optional
        Policy for fetching tags/labels from provider secrets, possible options are Fetch, None. Defaults to None
    property : str, default is Undefined, optional
        Used to select a specific property of the Provider value (if a map), if supported
    version : str, default is Undefined, optional
        Used to select a specific version of the Provider value, if supported
    """


    conversionStrategy?: "Default" | "Unicode" = "Default"

    decodingStrategy?: "Auto" | "Base64" | "Base64URL" | "None" = "None"

    key: str

    metadataPolicy?: "None" | "Fetch" = "None"

    property?: str

    version?: str


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0Find:
    r"""
    Used to find secrets based on tags or regular expressions
    Note: Find does not support sourceRef.Generator or sourceRef.GeneratorRef.

    Attributes
    ----------
    conversionStrategy : str, default is "Default", optional
        Used to define a conversion Strategy
    decodingStrategy : str, default is "None", optional
        Used to define a decoding Strategy
    name : SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0FindName, default is Undefined, optional
        name
    path : str, default is Undefined, optional
        A root path to start the find operations.
    tags : {str:str}, default is Undefined, optional
        Find secrets based on tags.
    """


    conversionStrategy?: "Default" | "Unicode" = "Default"

    decodingStrategy?: "Auto" | "Base64" | "Base64URL" | "None" = "None"

    name?: SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0FindName

    path?: str

    tags?: {str:str}


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0FindName:
    r"""
    Finds secrets based on the name.

    Attributes
    ----------
    regexp : str, default is Undefined, optional
        Finds secrets base
    """


    regexp?: str


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0RewriteItems0:
    r"""
    spaces upbound io v1alpha1 shared external secret spec external secret spec data from items0 rewrite items0

    Attributes
    ----------
    regexp : SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0RewriteItems0Regexp, default is Undefined, optional
        regexp
    transform : SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0RewriteItems0Transform, default is Undefined, optional
        transform
    """


    regexp?: SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0RewriteItems0Regexp

    transform?: SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0RewriteItems0Transform


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0RewriteItems0Regexp:
    r"""
    Used to rewrite with regular expressions.
    The resulting key will be the output of a regexp.ReplaceAll operation.

    Attributes
    ----------
    source : str, default is Undefined, required
        Used to define the regular expression of a re.Compiler.
    target : str, default is Undefined, required
        Used to define the target pattern of a ReplaceAll operation.
    """


    source: str

    target: str


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0RewriteItems0Transform:
    r"""
    Used to apply string transformation on the secrets.
    The resulting key will be the output of the template applied by the operation.

    Attributes
    ----------
    template : str, default is Undefined, required
        Used to define the template to apply on the secret name.
        `.value ` will specify the secret name in the template.
    """


    template: str


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0SourceRef:
    r"""
    SourceRef points to a store or generator
    which contains secret values ready to use.
    Use this in combination with Extract or Find pull values out of
    a specific SecretStore.
    When sourceRef points to a generator Extract or Find is not supported.
    The generator returns a static map of values

    Attributes
    ----------
    generatorRef : SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0SourceRefGeneratorRef, default is Undefined, optional
        generator ref
    storeRef : SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0SourceRefStoreRef, default is Undefined, optional
        store ref
    """


    generatorRef?: SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0SourceRefGeneratorRef

    storeRef?: SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0SourceRefStoreRef


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0SourceRefGeneratorRef:
    r"""
    GeneratorRef points to a generator custom resource.

    Attributes
    ----------
    apiVersion : str, default is "generators.external-secrets.io/v1alpha1", optional
        Specify the apiVersion of the generator resource
    kind : str, default is Undefined, required
        Specify the Kind of the resource, e.g. Password, ACRAccessToken etc.
    name : str, default is Undefined, required
        Specify the name of the generator resource
    """


    apiVersion?: str = "generators.external-secrets.io/v1alpha1"

    kind: str

    name: str


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataFromItems0SourceRefStoreRef:
    r"""
    SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.

    Attributes
    ----------
    kind : str, default is Undefined, optional
        Kind of the SecretStore resource (SecretStore or ClusterSecretStore)
        Defaults to `SecretStore`
    name : str, default is Undefined, required
        Name of the SecretStore resource
    """


    kind?: str

    name: str


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataItems0:
    r"""
    ExternalSecretData defines the connection between the Kubernetes Secret key (spec.data.<key>) and the Provider data.

    Attributes
    ----------
    remoteRef : SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataItems0RemoteRef, default is Undefined, required
        remote ref
    secretKey : str, default is Undefined, required
        SecretKey defines the key in which the controller stores
        the value. This is the key in the Kind=Secret
    sourceRef : SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataItems0SourceRef, default is Undefined, optional
        source ref
    """


    remoteRef: SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataItems0RemoteRef

    secretKey: str

    sourceRef?: SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataItems0SourceRef


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataItems0RemoteRef:
    r"""
    RemoteRef points to the remote secret and defines
    which secret (version/property/..) to fetch.

    Attributes
    ----------
    conversionStrategy : str, default is "Default", optional
        Used to define a conversion Strategy
    decodingStrategy : str, default is "None", optional
        Used to define a decoding Strategy
    key : str, default is Undefined, required
        Key is the key used in the Provider, mandatory
    metadataPolicy : str, default is "None", optional
        Policy for fetching tags/labels from provider secrets, possible options are Fetch, None. Defaults to None
    property : str, default is Undefined, optional
        Used to select a specific property of the Provider value (if a map), if supported
    version : str, default is Undefined, optional
        Used to select a specific version of the Provider value, if supported
    """


    conversionStrategy?: "Default" | "Unicode" = "Default"

    decodingStrategy?: "Auto" | "Base64" | "Base64URL" | "None" = "None"

    key: str

    metadataPolicy?: "None" | "Fetch" = "None"

    property?: str

    version?: str


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataItems0SourceRef:
    r"""
    SourceRef allows you to override the source
    from which the value will pulled from.

    Attributes
    ----------
    generatorRef : SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataItems0SourceRefGeneratorRef, default is Undefined, optional
        generator ref
    storeRef : SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataItems0SourceRefStoreRef, default is Undefined, optional
        store ref
    """


    generatorRef?: SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataItems0SourceRefGeneratorRef

    storeRef?: SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataItems0SourceRefStoreRef


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataItems0SourceRefGeneratorRef:
    r"""
    GeneratorRef points to a generator custom resource.

    Deprecated: The generatorRef is not implemented in .data[].
    this will be removed with v1.

    Attributes
    ----------
    apiVersion : str, default is "generators.external-secrets.io/v1alpha1", optional
        Specify the apiVersion of the generator resource
    kind : str, default is Undefined, required
        Specify the Kind of the resource, e.g. Password, ACRAccessToken etc.
    name : str, default is Undefined, required
        Specify the name of the generator resource
    """


    apiVersion?: str = "generators.external-secrets.io/v1alpha1"

    kind: str

    name: str


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecDataItems0SourceRefStoreRef:
    r"""
    SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.

    Attributes
    ----------
    kind : str, default is Undefined, optional
        Kind of the SecretStore resource (SecretStore or ClusterSecretStore)
        Defaults to `SecretStore`
    name : str, default is Undefined, required
        Name of the SecretStore resource
    """


    kind?: str

    name: str


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecSecretStoreRef:
    r"""
    SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.

    Attributes
    ----------
    kind : str, default is Undefined, optional
        Kind of the SecretStore resource (SecretStore or ClusterSecretStore)
        Defaults to `SecretStore`
    name : str, default is Undefined, required
        Name of the SecretStore resource
    """


    kind?: str

    name: str


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecTarget:
    r"""
    ExternalSecretTarget defines the Kubernetes Secret to be created
    There can be only one target per ExternalSecret.

    Attributes
    ----------
    creationPolicy : str, default is "Owner", optional
        CreationPolicy defines rules on how to create the resulting Secret
        Defaults to 'Owner'
    deletionPolicy : str, default is "Retain", optional
        DeletionPolicy defines rules on how to delete the resulting Secret
        Defaults to 'Retain'
    immutable : bool, default is Undefined, optional
        Immutable defines if the final secret will be immutable
    name : str, default is Undefined, optional
        Name defines the name of the Secret resource to be managed
        This field is immutable
        Defaults to the .metadata.name of the ExternalSecret resource
    template : SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecTargetTemplate, default is Undefined, optional
        template
    """


    creationPolicy?: "Owner" | "Orphan" | "Merge" | "None" = "Owner"

    deletionPolicy?: "Delete" | "Merge" | "Retain" = "Retain"

    immutable?: bool

    name?: str

    template?: SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecTargetTemplate


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecTargetTemplate:
    r"""
    Template defines a blueprint for the created Secret resource.

    Attributes
    ----------
    data : {str:str}, default is Undefined, optional
        data
    engineVersion : str, default is "v2", optional
        EngineVersion specifies the template engine version
        that should be used to compile/execute the
        template specified in .data and .templateFrom[].
    mergePolicy : str, default is "Replace", optional
        merge policy
    metadata : SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecTargetTemplateMetadata, default is Undefined, optional
        metadata
    templateFrom : [SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecTargetTemplateTemplateFromItems0], default is Undefined, optional
        template from
    $type : str, default is Undefined, optional
        type
    """


    data?: {str:str}

    engineVersion?: "v1" | "v2" = "v2"

    mergePolicy?: "Replace" | "Merge" = "Replace"

    metadata?: SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecTargetTemplateMetadata

    templateFrom?: [SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecTargetTemplateTemplateFromItems0]

    $type?: str


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecTargetTemplateMetadata:
    r"""
    ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        annotations
    labels : {str:str}, default is Undefined, optional
        labels
    """


    annotations?: {str:str}

    labels?: {str:str}


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecTargetTemplateTemplateFromItems0:
    r"""
    spaces upbound io v1alpha1 shared external secret spec external secret spec target template template from items0

    Attributes
    ----------
    configMap : SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecTargetTemplateTemplateFromItems0ConfigMap, default is Undefined, optional
        config map
    literal : str, default is Undefined, optional
        literal
    secret : SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecTargetTemplateTemplateFromItems0Secret, default is Undefined, optional
        secret
    target : str, default is "Data", optional
        target
    """


    configMap?: SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecTargetTemplateTemplateFromItems0ConfigMap

    literal?: str

    secret?: SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecTargetTemplateTemplateFromItems0Secret

    target?: "Data" | "Annotations" | "Labels" = "Data"


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecTargetTemplateTemplateFromItems0ConfigMap:
    r"""
    spaces upbound io v1alpha1 shared external secret spec external secret spec target template template from items0 config map

    Attributes
    ----------
    items : [SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecTargetTemplateTemplateFromItems0ConfigMapItemsItems0], default is Undefined, required
        items
    name : str, default is Undefined, required
        name
    """


    items: [SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecTargetTemplateTemplateFromItems0ConfigMapItemsItems0]

    name: str


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecTargetTemplateTemplateFromItems0ConfigMapItemsItems0:
    r"""
    spaces upbound io v1alpha1 shared external secret spec external secret spec target template template from items0 config map items items0

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    templateAs : str, default is "Values", optional
        template as
    """


    key: str

    templateAs?: "Values" | "KeysAndValues" = "Values"


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecTargetTemplateTemplateFromItems0Secret:
    r"""
    spaces upbound io v1alpha1 shared external secret spec external secret spec target template template from items0 secret

    Attributes
    ----------
    items : [SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecTargetTemplateTemplateFromItems0SecretItemsItems0], default is Undefined, required
        items
    name : str, default is Undefined, required
        name
    """


    items: [SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecTargetTemplateTemplateFromItems0SecretItemsItems0]

    name: str


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecExternalSecretSpecTargetTemplateTemplateFromItems0SecretItemsItems0:
    r"""
    spaces upbound io v1alpha1 shared external secret spec external secret spec target template template from items0 secret items items0

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    templateAs : str, default is "Values", optional
        template as
    """


    key: str

    templateAs?: "Values" | "KeysAndValues" = "Values"


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecNamespaceSelector:
    r"""
    The projected secret can be consumed
    only within namespaces matching the provided selector.
    Either names or a labelSelector must be specified.

    Attributes
    ----------
    labelSelectors : [SpacesUpboundIoV1alpha1SharedExternalSecretSpecNamespaceSelectorLabelSelectorsItems0], default is Undefined, optional
        A resource is matched if any of the label selector matches.
        In case when the list is empty, resource is matched too.
    names : [str], default is Undefined, optional
        A resource is selected if its metadata.name matches any of the provided names.
        In case when the list is empty, resource is matched too.
    """


    labelSelectors?: [SpacesUpboundIoV1alpha1SharedExternalSecretSpecNamespaceSelectorLabelSelectorsItems0]

    names?: [str]


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecNamespaceSelectorLabelSelectorsItems0:
    r"""
    A label selector is a label query over a set of resources. The result of matchLabels and
    matchExpressions are ANDed. An empty label selector matches all objects. A null
    label selector matches no objects.

    Attributes
    ----------
    matchExpressions : [SpacesUpboundIoV1alpha1SharedExternalSecretSpecNamespaceSelectorLabelSelectorsItems0MatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [SpacesUpboundIoV1alpha1SharedExternalSecretSpecNamespaceSelectorLabelSelectorsItems0MatchExpressionsItems0]

    matchLabels?: {str:str}


schema SpacesUpboundIoV1alpha1SharedExternalSecretSpecNamespaceSelectorLabelSelectorsItems0MatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema SpacesUpboundIoV1alpha1SharedExternalSecretStatus:
    r"""
    SharedExternalSecretStatus defines the observed state of the ExternalSecret.

    Attributes
    ----------
    failed : [SpacesUpboundIoV1alpha1SharedExternalSecretStatusFailedItems0], default is Undefined, optional
        list of provisioning failures.
    observedGeneration : int, default is Undefined, optional
        observed resource generation.
    provisioned : [SpacesUpboundIoV1alpha1SharedExternalSecretStatusProvisionedItems0], default is Undefined, optional
        List of successfully provisioned targets.
    """


    failed?: [SpacesUpboundIoV1alpha1SharedExternalSecretStatusFailedItems0]

    observedGeneration?: int

    provisioned?: [SpacesUpboundIoV1alpha1SharedExternalSecretStatusProvisionedItems0]


schema SpacesUpboundIoV1alpha1SharedExternalSecretStatusFailedItems0:
    r"""
    SharedExternalSecretProvisioningFailure describes a external secret provisioning
    failure in a specific control plane.

    Attributes
    ----------
    conditions : [SpacesUpboundIoV1alpha1SharedExternalSecretStatusFailedItems0ConditionsItems0], default is Undefined, optional
        List of conditions.
    controlPlane : str, default is Undefined, required
        ControlPlane name where the failure occurred.
    """


    conditions?: [SpacesUpboundIoV1alpha1SharedExternalSecretStatusFailedItems0ConditionsItems0]

    controlPlane: str


schema SpacesUpboundIoV1alpha1SharedExternalSecretStatusFailedItems0ConditionsItems0:
    r"""
    spaces upbound io v1alpha1 shared external secret status failed items0 conditions items0

    Attributes
    ----------
    message : str, default is Undefined, optional
        message
    status : str, default is Undefined, required
        status
    $type : str, default is Undefined, required
        type
    """


    message?: str

    status: str

    $type: str


schema SpacesUpboundIoV1alpha1SharedExternalSecretStatusProvisionedItems0:
    r"""
    SharedExternalSecretProvisioningSuccess defines external secret provisioning success.

    Attributes
    ----------
    controlPlane : str, default is Undefined, required
        ControlPlane name where the external secret got successfully projected.
    """


    controlPlane: str


