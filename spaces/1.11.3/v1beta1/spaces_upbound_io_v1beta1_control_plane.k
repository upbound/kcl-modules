"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ControlPlane:
    r"""
    ControlPlane defines a managed Crossplane instance.

    Attributes
    ----------
    apiVersion : str, default is "spaces.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ControlPlane", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SpacesUpboundIoV1beta1ControlPlaneSpec, default is Undefined, required
        spec
    status : SpacesUpboundIoV1beta1ControlPlaneStatus, default is Undefined, optional
        status
    """


    apiVersion: "spaces.upbound.io/v1beta1" = "spaces.upbound.io/v1beta1"

    kind: "ControlPlane" = "ControlPlane"

    metadata?: v1.ObjectMeta

    spec: SpacesUpboundIoV1beta1ControlPlaneSpec

    status?: SpacesUpboundIoV1beta1ControlPlaneStatus


schema SpacesUpboundIoV1beta1ControlPlaneSpec:
    r"""
    A ControlPlaneSpec represents the desired state of the ControlPlane.

    Attributes
    ----------
    class : str, default is "default", optional
        [[GATE:EnableControlPlaneClasses]]
        Class specifies the class of the control plane. This affects the
        control plane sizing, including component replicas and resource
        requirements. There are multiple predefined classes, with "default"
        being the standard Spaces control plane without any additional class
        configuration. Check the Upbound Cloud documentation for a list of all
        available classes. Defaults to "default".
    crossplane : SpacesUpboundIoV1beta1ControlPlaneSpecCrossplane, default is Undefined, optional
        crossplane
    restore : SpacesUpboundIoV1beta1ControlPlaneSpecRestore, default is Undefined, optional
        restore
    writeConnectionSecretToRef : SpacesUpboundIoV1beta1ControlPlaneSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    class?: str = "default"

    crossplane?: SpacesUpboundIoV1beta1ControlPlaneSpecCrossplane

    restore?: SpacesUpboundIoV1beta1ControlPlaneSpecRestore

    writeConnectionSecretToRef?: SpacesUpboundIoV1beta1ControlPlaneSpecWriteConnectionSecretToRef


schema SpacesUpboundIoV1beta1ControlPlaneSpecCrossplane:
    r"""
    Crossplane defines the configuration for Crossplane.

    Attributes
    ----------
    autoUpgrade : SpacesUpboundIoV1beta1ControlPlaneSpecCrossplaneAutoUpgrade, default is Undefined, optional
        auto upgrade
    state : str, default is "Running", optional
        State defines the state for crossplane and provider workloads. We support
        the following states where 'Running' is the default:
        - Running: Starts/Scales up all crossplane and provider workloads in the ControlPlane
        - Paused: Pauses/Scales down all crossplane and provider workloads in the ControlPlane
    version : str, default is Undefined, optional
        Version is the version of Universal Crossplane to install.
    """


    autoUpgrade?: SpacesUpboundIoV1beta1ControlPlaneSpecCrossplaneAutoUpgrade

    state?: "Running" | "Paused" = "Running"

    version?: str


schema SpacesUpboundIoV1beta1ControlPlaneSpecCrossplaneAutoUpgrade:
    r"""
    AutoUpgrades defines the auto upgrade configuration for Crossplane.

    Attributes
    ----------
    channel : str, default is "Stable", optional
        Channel defines the upgrade channels for Crossplane. We support the following channels where 'Stable' is the
        default:
        - None: disables auto-upgrades and keeps the control plane at its current version of Crossplane.
        - Patch: automatically upgrades the control plane to the latest supported patch version when it
          becomes available while keeping the minor version the same.
        - Stable: automatically upgrades the control plane to the latest supported patch release on minor
          version N-1, where N is the latest supported minor version.
        - Rapid: automatically upgrades the cluster to the latest supported patch release on the latest
          supported minor version.
    """


    channel?: "None" | "Patch" | "Stable" | "Rapid" = "Stable"


schema SpacesUpboundIoV1beta1ControlPlaneSpecRestore:
    r"""
    [[GATE:EnableSharedBackup]] THIS IS AN ALPHA FIELD. Do not use it in production.
    Restore specifies details about the control planes restore configuration.

    Attributes
    ----------
    finishedAt : str, default is Undefined, optional
        FinishedAt is the time at which the control plane was restored, it's not
        meant to be set by the user, but rather by the system when the control
        plane is restored.
    source : SpacesUpboundIoV1beta1ControlPlaneSpecRestoreSource, default is Undefined, required
        source
    """


    finishedAt?: str

    source: SpacesUpboundIoV1beta1ControlPlaneSpecRestoreSource


schema SpacesUpboundIoV1beta1ControlPlaneSpecRestoreSource:
    r"""
    Source of the Backup or BackupSchedule to restore from.
    Require "restore" permission on the referenced Backup or BackupSchedule.
    ApiGroup is optional and defaults to "spaces.upbound.io".
    Kind is required, and the only supported kinds are Backup and
    BackupSchedule at the moment.
    Name is required.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced.
    kind : str, default is Undefined, optional
        Kind is the type of resource being referenced.
    name : str, default is Undefined, optional
        Name is the name of resource being referenced.
    """


    apiGroup?: str

    kind?: str

    name?: str


    check:
        len(kind) >= 1 if kind
        len(name) >= 1 if name


schema SpacesUpboundIoV1beta1ControlPlaneSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    If omitted, it is defaulted to the namespace of the ControlPlane.
    Deprecated: Use Hub or Upbound identities instead.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, optional
        Namespace of the secret. If omitted, it is equal to
        the namespace of the resource containing this reference as a field.
    """


    name: str

    namespace?: str


schema SpacesUpboundIoV1beta1ControlPlaneStatus:
    r"""
    A ControlPlaneStatus represents the observed state of a ControlPlane.

    Attributes
    ----------
    conditions : [SpacesUpboundIoV1beta1ControlPlaneStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    controlPlaneID : str, default is Undefined, optional
        control plane ID
    firstAvailableAt : str, default is Undefined, optional
        FirstAvailableAt is the time at which the control plane was available for the first time.
    message : str, default is Undefined, optional
        Message is a human-readable message indicating details about why the
        ControlPlane is in this condition.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    conditions?: [SpacesUpboundIoV1beta1ControlPlaneStatusConditionsItems0]

    controlPlaneID?: str

    firstAvailableAt?: str

    message?: str

    observedGeneration?: int


schema SpacesUpboundIoV1beta1ControlPlaneStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


