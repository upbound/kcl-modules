"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema ObjectRoleBinding:
    r"""
    A ObjectRoleBinding binds a namespaced API object to a set of subjects, at varying access levels.
    For now, there can be at most one ObjectRoleBinding pointing to each API object.

    Attributes
    ----------
    apiVersion : str, default is "authorization.spaces.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ObjectRoleBinding", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AuthorizationSpacesUpboundIoV1alpha1ObjectRoleBindingSpec, default is Undefined, required
        spec
    status : any, default is Undefined, optional
        ObjectRoleBindingStatus is RoleBindings' status.
    """


    apiVersion: "authorization.spaces.upbound.io/v1alpha1" = "authorization.spaces.upbound.io/v1alpha1"

    kind: "ObjectRoleBinding" = "ObjectRoleBinding"

    metadata?: v1.ObjectMeta

    spec: AuthorizationSpacesUpboundIoV1alpha1ObjectRoleBindingSpec

    status?: any


schema AuthorizationSpacesUpboundIoV1alpha1ObjectRoleBindingSpec:
    r"""
    ObjectRoleBindingSpec is ObjectRoleBinding's spec.

    Attributes
    ----------
    object : AuthorizationSpacesUpboundIoV1alpha1ObjectRoleBindingSpecObject, default is Undefined, required
        object
    subjects : [AuthorizationSpacesUpboundIoV1alpha1ObjectRoleBindingSpecSubjectsItems0], default is Undefined, required
        Subjects should be a map type with both kind+name as a key
    """


    object: AuthorizationSpacesUpboundIoV1alpha1ObjectRoleBindingSpecObject

    subjects: [AuthorizationSpacesUpboundIoV1alpha1ObjectRoleBindingSpecSubjectsItems0]


schema AuthorizationSpacesUpboundIoV1alpha1ObjectRoleBindingSpecObject:
    r"""
    Object references the object to which the listed subjects should have access at varying levels.
    The object value is immutable after creation.

    Attributes
    ----------
    apiGroup : str, default is Undefined, required
        APIGroup defines the apiGroup of the object being pointed to.
        With some minor differences, this is essentially matched as a DNS subdomain, like how Kubernetes validates it.
        The Kubernetes legacy core group is denoted as "core".
    name : str, default is Undefined, required
        Name points to the .metadata.name of the object targeted.
        Kubernetes validates this as a DNS 1123 subdomain.
    resource : str, default is Undefined, required
        Resource defines the resource type (often kind in plural, e.g.
        controlplanes) being pointed to.
        With some minor differences, this is essentially matched as a DNS label, like how Kubernetes validates it.
    """


    apiGroup: str

    name: str

    resource: str


    check:
        len(apiGroup) <= 64
        _regex_match(str(apiGroup), r"^[a-z][a-z0-9-]{0,61}[a-z0-9](\.[a-z][a-z0-9-]{0,61}[a-z0-9])*$")
        len(name) <= 253
        _regex_match(str(name), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$")
        len(resource) <= 63
        _regex_match(str(resource), r"^[a-z][a-z0-9-]{1,61}[a-z0-9]$")


schema AuthorizationSpacesUpboundIoV1alpha1ObjectRoleBindingSpecSubjectsItems0:
    r"""
    SubjectBinding contains a reference to the object or user identities a role
    binding applies to.

    Attributes
    ----------
    kind : str, default is Undefined, required
        Kind of subject being referenced. Values defined by this API group are
        for now only "UpboundTeam".
    name : str, default is Undefined, required
        Name (identifier) of the subject (of the specified kind) being referenced.
        The identifier must be 2-100 chars, [a-zA-Z0-9-], no repeating dashes, can't start/end with a dash.
        Notably, a UUID fits that format.
    role : str, default is Undefined, required
        Role this subject has on the associated Object.
        The list of valid roles is defined for each target API resource separately.
        For namespaces, valid values are "viewer", "editor", and "admin".
        The format of this is essentially a RFC 1035 label with underscores instead of dashes, minimum three characters long.
    """


    kind: "UpboundTeam"

    name: str

    role: str


    check:
        len(name) <= 100
        _regex_match(str(name), r"^([a-zA-Z0-9]+-?)+[a-zA-Z0-9]$")
        len(role) <= 63
        _regex_match(str(role), r"^[a-z][a-z0-9_]{1,62}[a-z0-9]$")


