"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SharedSecretStore:
    r"""
    SharedSecretStore represents a shared SecretStore projected as ClusterSecretStore
    into matching ControlPlanes in the same namespace. Once projected into a ControlPlane,
    it can be referenced from ExternalSecret instances, as part of `storeRef` fields.
    The secret store configuration including referenced credential are not leaked into the
    ControlPlanes and in that sense can be called secure as they are invisible to the
    ControlPlane workloads.

    Attributes
    ----------
    apiVersion : str, default is "spaces.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SharedSecretStore", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SpacesUpboundIoV1alpha1SharedSecretStoreSpec, default is Undefined, optional
        spec
    status : SpacesUpboundIoV1alpha1SharedSecretStoreStatus, default is Undefined, optional
        status
    """


    apiVersion: "spaces.upbound.io/v1alpha1" = "spaces.upbound.io/v1alpha1"

    kind: "SharedSecretStore" = "SharedSecretStore"

    metadata?: v1.ObjectMeta

    spec?: SpacesUpboundIoV1alpha1SharedSecretStoreSpec

    status?: SpacesUpboundIoV1alpha1SharedSecretStoreStatus


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpec:
    r"""
    SharedSecretStoreSpec defines the desired state of SecretStore.

    Attributes
    ----------
    controlPlaneSelector : SpacesUpboundIoV1alpha1SharedSecretStoreSpecControlPlaneSelector, default is Undefined, required
        control plane selector
    namespaceSelector : SpacesUpboundIoV1alpha1SharedSecretStoreSpecNamespaceSelector, default is Undefined, required
        namespace selector
    provider : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProvider, default is Undefined, required
        provider
    refreshInterval : int, default is Undefined, optional
        Used to configure store refresh interval in seconds.
    retrySettings : SpacesUpboundIoV1alpha1SharedSecretStoreSpecRetrySettings, default is Undefined, optional
        retry settings
    secretStoreMetadata : SpacesUpboundIoV1alpha1SharedSecretStoreSpecSecretStoreMetadata, default is Undefined, optional
        secret store metadata
    secretStoreName : str, default is Undefined, optional
        SecretStoreName is the name to use when creating secret stores within a control plane.
        optional, if not set, SharedSecretStore name will be used.
        When set, it is immutable.
    """


    controlPlaneSelector: SpacesUpboundIoV1alpha1SharedSecretStoreSpecControlPlaneSelector

    namespaceSelector: SpacesUpboundIoV1alpha1SharedSecretStoreSpecNamespaceSelector

    provider: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProvider

    refreshInterval?: int

    retrySettings?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecRetrySettings

    secretStoreMetadata?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecSecretStoreMetadata

    secretStoreName?: str


    check:
        len(secretStoreName) <= 253 if secretStoreName
        len(secretStoreName) >= 1 if secretStoreName


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecControlPlaneSelector:
    r"""
    The store is projected only to control planes
    matching the provided selector. Either names or a labelSelector must be specified.

    Attributes
    ----------
    labelSelectors : [SpacesUpboundIoV1alpha1SharedSecretStoreSpecControlPlaneSelectorLabelSelectorsItems0], default is Undefined, optional
        A resource is matched if any of the label selector matches.
        In case when the list is empty, resource is matched too.
    names : [str], default is Undefined, optional
        A resource is selected if its metadata.name matches any of the provided names.
        In case when the list is empty, resource is matched too.
    """


    labelSelectors?: [SpacesUpboundIoV1alpha1SharedSecretStoreSpecControlPlaneSelectorLabelSelectorsItems0]

    names?: [str]


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecControlPlaneSelectorLabelSelectorsItems0:
    r"""
    A label selector is a label query over a set of resources. The result of matchLabels and
    matchExpressions are ANDed. An empty label selector matches all objects. A null
    label selector matches no objects.

    Attributes
    ----------
    matchExpressions : [SpacesUpboundIoV1alpha1SharedSecretStoreSpecControlPlaneSelectorLabelSelectorsItems0MatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [SpacesUpboundIoV1alpha1SharedSecretStoreSpecControlPlaneSelectorLabelSelectorsItems0MatchExpressionsItems0]

    matchLabels?: {str:str}


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecControlPlaneSelectorLabelSelectorsItems0MatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecNamespaceSelector:
    r"""
    The projected secret store can be consumed
    only within namespaces matching the provided selector.
    Either names or a labelSelector must be specified.

    Attributes
    ----------
    labelSelectors : [SpacesUpboundIoV1alpha1SharedSecretStoreSpecNamespaceSelectorLabelSelectorsItems0], default is Undefined, optional
        A resource is matched if any of the label selector matches.
        In case when the list is empty, resource is matched too.
    names : [str], default is Undefined, optional
        A resource is selected if its metadata.name matches any of the provided names.
        In case when the list is empty, resource is matched too.
    """


    labelSelectors?: [SpacesUpboundIoV1alpha1SharedSecretStoreSpecNamespaceSelectorLabelSelectorsItems0]

    names?: [str]


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecNamespaceSelectorLabelSelectorsItems0:
    r"""
    A label selector is a label query over a set of resources. The result of matchLabels and
    matchExpressions are ANDed. An empty label selector matches all objects. A null
    label selector matches no objects.

    Attributes
    ----------
    matchExpressions : [SpacesUpboundIoV1alpha1SharedSecretStoreSpecNamespaceSelectorLabelSelectorsItems0MatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [SpacesUpboundIoV1alpha1SharedSecretStoreSpecNamespaceSelectorLabelSelectorsItems0MatchExpressionsItems0]

    matchLabels?: {str:str}


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecNamespaceSelectorLabelSelectorsItems0MatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProvider:
    r"""
    Used to configure the provider. Only one provider may be set.

    Attributes
    ----------
    akeyless : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeyless, default is Undefined, optional
        akeyless
    alibaba : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAlibaba, default is Undefined, optional
        alibaba
    aws : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAws, default is Undefined, optional
        aws
    azurekv : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAzurekv, default is Undefined, optional
        azurekv
    conjur : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjur, default is Undefined, optional
        conjur
    delinea : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDelinea, default is Undefined, optional
        delinea
    doppler : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDoppler, default is Undefined, optional
        doppler
    fake : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderFake, default is Undefined, optional
        fake
    gcpsm : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGcpsm, default is Undefined, optional
        gcpsm
    gitlab : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGitlab, default is Undefined, optional
        gitlab
    ibm : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderIbm, default is Undefined, optional
        ibm
    keepersecurity : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKeepersecurity, default is Undefined, optional
        keepersecurity
    kubernetes : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetes, default is Undefined, optional
        kubernetes
    onepassword : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOnepassword, default is Undefined, optional
        onepassword
    oracle : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOracle, default is Undefined, optional
        oracle
    scaleway : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderScaleway, default is Undefined, optional
        scaleway
    senhasegura : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderSenhasegura, default is Undefined, optional
        senhasegura
    upboundspaces : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderUpboundspaces, default is Undefined, optional
        upboundspaces
    vault : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVault, default is Undefined, optional
        vault
    webhook : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderWebhook, default is Undefined, optional
        webhook
    yandexcertificatemanager : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexcertificatemanager, default is Undefined, optional
        yandexcertificatemanager
    yandexlockbox : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexlockbox, default is Undefined, optional
        yandexlockbox
    """


    akeyless?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeyless

    alibaba?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAlibaba

    aws?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAws

    azurekv?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAzurekv

    conjur?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjur

    delinea?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDelinea

    doppler?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDoppler

    fake?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderFake

    gcpsm?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGcpsm

    gitlab?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGitlab

    ibm?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderIbm

    keepersecurity?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKeepersecurity

    kubernetes?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetes

    onepassword?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOnepassword

    oracle?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOracle

    scaleway?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderScaleway

    senhasegura?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderSenhasegura

    upboundspaces?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderUpboundspaces

    vault?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVault

    webhook?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderWebhook

    yandexcertificatemanager?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexcertificatemanager

    yandexlockbox?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexlockbox


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeyless:
    r"""
    Akeyless configures this store to sync secrets using Akeyless Vault provider

    Attributes
    ----------
    akeylessGWApiURL : str, default is Undefined, required
        Akeyless GW API Url from which the secrets to be fetched from.
    authSecretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessAuthSecretRef, default is Undefined, required
        auth secret ref
    caBundle : str, default is Undefined, optional
        PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used
        if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates
        are used to validate the TLS connection.
    caProvider : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessCaProvider, default is Undefined, optional
        ca provider
    """


    akeylessGWApiURL: str

    authSecretRef: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessAuthSecretRef

    caBundle?: str

    caProvider?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessCaProvider


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessAuthSecretRef:
    r"""
    Auth configures how the operator authenticates with Akeyless.

    Attributes
    ----------
    kubernetesAuth : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth, default is Undefined, optional
        kubernetes auth
    secretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef, default is Undefined, optional
        secret ref
    """


    kubernetesAuth?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth

    secretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth:
    r"""
    Kubernetes authenticates with Akeyless by passing the ServiceAccount
    token stored in the named Secret resource.

    Attributes
    ----------
    accessID : str, default is Undefined, required
        the Akeyless Kubernetes auth-method access-id
    k8sConfName : str, default is Undefined, required
        Kubernetes-auth configuration name in Akeyless-Gateway
    secretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef, default is Undefined, optional
        secret ref
    serviceAccountRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef, default is Undefined, optional
        service account ref
    """


    accessID: str

    k8sConfName: str

    secretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef

    serviceAccountRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef:
    r"""
    Optional secret field containing a Kubernetes ServiceAccount JWT used
    for authenticating with Akeyless. If a name is specified without a key,
    `token` is the default. If one is not specified, the one bound to
    the controller will be used.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef:
    r"""
    Optional service account field containing the name of a kubernetes ServiceAccount.
    If the service account is specified, the service account secret token JWT will be used
    for authenticating with Akeyless. If the service account selector is not supplied,
    the secretRef will be used instead.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef:
    r"""
    Reference to a Secret that contains the details
    to authenticate with Akeyless.

    Attributes
    ----------
    accessID : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID, default is Undefined, optional
        access ID
    accessType : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType, default is Undefined, optional
        access type
    accessTypeParam : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam, default is Undefined, optional
        access type param
    """


    accessID?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID

    accessType?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType

    accessTypeParam?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID:
    r"""
    The SecretAccessID is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType:
    r"""
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam:
    r"""
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAkeylessCaProvider:
    r"""
    The provider for the CA bundle to use to validate Akeyless Gateway certificate.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key where the CA certificate can be found in the Secret or ConfigMap.
    name : str, default is Undefined, required
        The name of the object located at the provider type.
    namespace : str, default is Undefined, optional
        The namespace the Provider type is in.
        Can only be defined when used in a ClusterSecretStore.
    $type : str, default is Undefined, required
        The type of provider to use such as "Secret", or "ConfigMap".
    """


    key?: str

    name: str

    namespace?: str

    $type: "Secret" | "ConfigMap"


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAlibaba:
    r"""
    Alibaba configures this store to sync secrets using Alibaba Cloud provider

    Attributes
    ----------
    auth : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAlibabaAuth, default is Undefined, required
        auth
    regionID : str, default is Undefined, required
        Alibaba Region to be used for the provider
    """


    auth: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAlibabaAuth

    regionID: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAlibabaAuth:
    r"""
    AlibabaAuth contains a secretRef for credentials.

    Attributes
    ----------
    rrsa : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAlibabaAuthRrsa, default is Undefined, optional
        rrsa
    secretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAlibabaAuthSecretRef, default is Undefined, optional
        secret ref
    """


    rrsa?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAlibabaAuthRrsa

    secretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAlibabaAuthSecretRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAlibabaAuthRrsa:
    r"""
    Authenticate against Alibaba using RRSA.

    Attributes
    ----------
    oidcProviderArn : str, default is Undefined, required
        oidc provider arn
    oidcTokenFilePath : str, default is Undefined, required
        oidc token file path
    roleArn : str, default is Undefined, required
        role arn
    sessionName : str, default is Undefined, required
        session name
    """


    oidcProviderArn: str

    oidcTokenFilePath: str

    roleArn: str

    sessionName: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAlibabaAuthSecretRef:
    r"""
    AlibabaAuthSecretRef holds secret references for Alibaba credentials.

    Attributes
    ----------
    accessKeyIDSecretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef, default is Undefined, required
        access key ID secret ref
    accessKeySecretSecretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef, default is Undefined, required
        access key secret secret ref
    """


    accessKeyIDSecretRef: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef

    accessKeySecretSecretRef: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef:
    r"""
    The AccessKeyID is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef:
    r"""
    The AccessKeySecret is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAws:
    r"""
    AWS configures this store to sync secrets using AWS Secret Manager provider

    Attributes
    ----------
    additionalRoles : [str], default is Undefined, optional
        AdditionalRoles is a chained list of Role ARNs which the provider will sequentially assume before assuming the Role
    auth : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsAuth, default is Undefined, optional
        auth
    externalID : str, default is Undefined, optional
        AWS External ID set on assumed IAM roles
    region : str, default is Undefined, required
        AWS Region to be used for the provider
    role : str, default is Undefined, optional
        Role is a Role ARN which the provider will assume
    secretsManager : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsSecretsManager, default is Undefined, optional
        secrets manager
    service : str, default is Undefined, required
        Service defines which service should be used to fetch the secrets
    sessionTags : [SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsSessionTagsItems0], default is Undefined, optional
        AWS STS assume role session tags
    transitiveTagKeys : [str], default is Undefined, optional
        AWS STS assume role transitive session tags. Required when multiple rules are used with the provider
    """


    additionalRoles?: [str]

    auth?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsAuth

    externalID?: str

    region: str

    role?: str

    secretsManager?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsSecretsManager

    service: "SecretsManager" | "ParameterStore"

    sessionTags?: [SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsSessionTagsItems0]

    transitiveTagKeys?: [str]


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsAuth:
    r"""
    Auth defines the information necessary to authenticate against AWS
    if not set aws sdk will infer credentials from your environment
    see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials

    Attributes
    ----------
    jwt : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsAuthJwt, default is Undefined, optional
        jwt
    secretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsAuthSecretRef, default is Undefined, optional
        secret ref
    """


    jwt?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsAuthJwt

    secretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsAuthSecretRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsAuthJwt:
    r"""
    Authenticate against AWS using service account tokens.

    Attributes
    ----------
    serviceAccountRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsAuthJwtServiceAccountRef, default is Undefined, optional
        service account ref
    """


    serviceAccountRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsAuthJwtServiceAccountRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsAuthJwtServiceAccountRef:
    r"""
    A reference to a ServiceAccount resource.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsAuthSecretRef:
    r"""
    AWSAuthSecretRef holds secret references for AWS credentials
    both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.

    Attributes
    ----------
    accessKeyIDSecretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef, default is Undefined, optional
        access key ID secret ref
    secretAccessKeySecretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef, default is Undefined, optional
        secret access key secret ref
    sessionTokenSecretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef, default is Undefined, optional
        session token secret ref
    """


    accessKeyIDSecretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef

    secretAccessKeySecretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef

    sessionTokenSecretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef:
    r"""
    The AccessKeyID is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef:
    r"""
    The SecretAccessKey is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef:
    r"""
    The SessionToken used for authentication
    This must be defined if AccessKeyID and SecretAccessKey are temporary credentials
    see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsSecretsManager:
    r"""
    SecretsManager defines how the provider behaves when interacting with AWS SecretsManager

    Attributes
    ----------
    forceDeleteWithoutRecovery : bool, default is Undefined, optional
        Specifies whether to delete the secret without any recovery window. You
        can't use both this parameter and RecoveryWindowInDays in the same call.
        If you don't use either, then by default Secrets Manager uses a 30 day
        recovery window.
        see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-ForceDeleteWithoutRecovery
    recoveryWindowInDays : int, default is Undefined, optional
        The number of days from 7 to 30 that Secrets Manager waits before
        permanently deleting the secret. You can't use both this parameter and
        ForceDeleteWithoutRecovery in the same call. If you don't use either,
        then by default Secrets Manager uses a 30 day recovery window.
        see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-RecoveryWindowInDays
    """


    forceDeleteWithoutRecovery?: bool

    recoveryWindowInDays?: int


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAwsSessionTagsItems0:
    r"""
    spaces upbound io v1alpha1 shared secret store spec provider aws session tags items0

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    value : str, default is Undefined, required
        value
    """


    key: str

    value: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAzurekv:
    r"""
    AzureKV configures this store to sync secrets using Azure Key Vault provider

    Attributes
    ----------
    authSecretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAzurekvAuthSecretRef, default is Undefined, optional
        auth secret ref
    authType : str, default is "ServicePrincipal", optional
        Auth type defines how to authenticate to the keyvault service.
        Valid values are:
        - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret)
        - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)
    environmentType : str, default is "PublicCloud", optional
        EnvironmentType specifies the Azure cloud environment endpoints to use for
        connecting and authenticating with Azure. By default it points to the public cloud AAD endpoint.
        The following endpoints are available, also see here: https://github.com/Azure/go-autorest/blob/main/autorest/azure/environments.go#L152
        PublicCloud, USGovernmentCloud, ChinaCloud, GermanCloud
    identityId : str, default is Undefined, optional
        If multiple Managed Identity is assigned to the pod, you can select the one to be used
    serviceAccountRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAzurekvServiceAccountRef, default is Undefined, optional
        service account ref
    tenantId : str, default is Undefined, optional
        TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.
    vaultUrl : str, default is Undefined, required
        Vault Url from which the secrets to be fetched from.
    """


    authSecretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAzurekvAuthSecretRef

    authType?: "ServicePrincipal" | "ManagedIdentity" | "WorkloadIdentity" = "ServicePrincipal"

    environmentType?: "PublicCloud" | "USGovernmentCloud" | "ChinaCloud" | "GermanCloud" = "PublicCloud"

    identityId?: str

    serviceAccountRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAzurekvServiceAccountRef

    tenantId?: str

    vaultUrl: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAzurekvAuthSecretRef:
    r"""
    Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.

    Attributes
    ----------
    clientId : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAzurekvAuthSecretRefClientID, default is Undefined, optional
        client Id
    clientSecret : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret, default is Undefined, optional
        client secret
    """


    clientId?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAzurekvAuthSecretRefClientID

    clientSecret?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAzurekvAuthSecretRefClientID:
    r"""
    The Azure clientId of the service principle used for authentication.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret:
    r"""
    The Azure ClientSecret of the service principle used for authentication.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderAzurekvServiceAccountRef:
    r"""
    ServiceAccountRef specified the service account
    that should be used when authenticating with WorkloadIdentity.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjur:
    r"""
    Conjur configures this store to sync secrets using conjur provider

    Attributes
    ----------
    auth : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjurAuth, default is Undefined, required
        auth
    caBundle : str, default is Undefined, optional
        ca bundle
    caProvider : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjurCaProvider, default is Undefined, optional
        ca provider
    url : str, default is Undefined, required
        url
    """


    auth: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjurAuth

    caBundle?: str

    caProvider?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjurCaProvider

    url: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjurAuth:
    r"""
    spaces upbound io v1alpha1 shared secret store spec provider conjur auth

    Attributes
    ----------
    apikey : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjurAuthApikey, default is Undefined, optional
        apikey
    jwt : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjurAuthJwt, default is Undefined, optional
        jwt
    """


    apikey?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjurAuthApikey

    jwt?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjurAuthJwt


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjurAuthApikey:
    r"""
    spaces upbound io v1alpha1 shared secret store spec provider conjur auth apikey

    Attributes
    ----------
    account : str, default is Undefined, required
        account
    apiKeyRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjurAuthApikeyAPIKeyRef, default is Undefined, required
        api key ref
    userRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjurAuthApikeyUserRef, default is Undefined, required
        user ref
    """


    account: str

    apiKeyRef: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjurAuthApikeyAPIKeyRef

    userRef: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjurAuthApikeyUserRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjurAuthApikeyAPIKeyRef:
    r"""
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjurAuthApikeyUserRef:
    r"""
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjurAuthJwt:
    r"""
    spaces upbound io v1alpha1 shared secret store spec provider conjur auth jwt

    Attributes
    ----------
    account : str, default is Undefined, required
        account
    secretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjurAuthJwtSecretRef, default is Undefined, optional
        secret ref
    serviceAccountRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjurAuthJwtServiceAccountRef, default is Undefined, optional
        service account ref
    serviceID : str, default is Undefined, required
        The conjur authn jwt webservice id
    """


    account: str

    secretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjurAuthJwtSecretRef

    serviceAccountRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjurAuthJwtServiceAccountRef

    serviceID: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjurAuthJwtSecretRef:
    r"""
    Optional SecretRef that refers to a key in a Secret resource containing JWT token to
    authenticate with Conjur using the JWT authentication method.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjurAuthJwtServiceAccountRef:
    r"""
    Optional ServiceAccountRef specifies the Kubernetes service account for which to request
    a token for with the `TokenRequest` API.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderConjurCaProvider:
    r"""
    Used to provide custom certificate authority (CA) certificates
    for a secret store. The CAProvider points to a Secret or ConfigMap resource
    that contains a PEM-encoded certificate.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key where the CA certificate can be found in the Secret or ConfigMap.
    name : str, default is Undefined, required
        The name of the object located at the provider type.
    namespace : str, default is Undefined, optional
        The namespace the Provider type is in.
        Can only be defined when used in a ClusterSecretStore.
    $type : str, default is Undefined, required
        The type of provider to use such as "Secret", or "ConfigMap".
    """


    key?: str

    name: str

    namespace?: str

    $type: "Secret" | "ConfigMap"


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDelinea:
    r"""
    Delinea DevOps Secrets Vault
    https://docs.delinea.com/online-help/products/devops-secrets-vault/current

    Attributes
    ----------
    clientId : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDelineaClientID, default is Undefined, required
        client Id
    clientSecret : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDelineaClientSecret, default is Undefined, required
        client secret
    tenant : str, default is Undefined, required
        Tenant is the chosen hostname / site name.
    tld : str, default is Undefined, optional
        TLD is based on the server location that was chosen during provisioning.
        If unset, defaults to "com".
    urlTemplate : str, default is Undefined, optional
        URLTemplate
        If unset, defaults to "https://%s.secretsvaultcloud.%s/v1/%s%s".
    """


    clientId: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDelineaClientID

    clientSecret: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDelineaClientSecret

    tenant: str

    tld?: str

    urlTemplate?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDelineaClientID:
    r"""
    ClientID is the non-secret part of the credential.

    Attributes
    ----------
    secretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDelineaClientIDSecretRef, default is Undefined, optional
        secret ref
    value : str, default is Undefined, optional
        Value can be specified directly to set a value without using a secret.
    """


    secretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDelineaClientIDSecretRef

    value?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDelineaClientIDSecretRef:
    r"""
    SecretRef references a key in a secret that will be used as value.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDelineaClientSecret:
    r"""
    ClientSecret is the secret part of the credential.

    Attributes
    ----------
    secretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDelineaClientSecretSecretRef, default is Undefined, optional
        secret ref
    value : str, default is Undefined, optional
        Value can be specified directly to set a value without using a secret.
    """


    secretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDelineaClientSecretSecretRef

    value?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDelineaClientSecretSecretRef:
    r"""
    SecretRef references a key in a secret that will be used as value.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDoppler:
    r"""
    Doppler configures this store to sync secrets using the Doppler provider

    Attributes
    ----------
    auth : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDopplerAuth, default is Undefined, required
        auth
    config : str, default is Undefined, optional
        Doppler config (required if not using a Service Token)
    format : str, default is Undefined, optional
        Format enables the downloading of secrets as a file (string)
    nameTransformer : str, default is Undefined, optional
        Environment variable compatible name transforms that change secret names to a different format
    project : str, default is Undefined, optional
        Doppler project (required if not using a Service Token)
    """


    auth: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDopplerAuth

    config?: str

    format?: "json" | "dotnet-json" | "env" | "yaml" | "docker"

    nameTransformer?: "upper-camel" | "camel" | "lower-snake" | "tf-var" | "dotnet-env" | "lower-kebab"

    project?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDopplerAuth:
    r"""
    Auth configures how the Operator authenticates with the Doppler API

    Attributes
    ----------
    secretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDopplerAuthSecretRef, default is Undefined, required
        secret ref
    """


    secretRef: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDopplerAuthSecretRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDopplerAuthSecretRef:
    r"""
    spaces upbound io v1alpha1 shared secret store spec provider doppler auth secret ref

    Attributes
    ----------
    dopplerToken : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDopplerAuthSecretRefDopplerToken, default is Undefined, required
        doppler token
    """


    dopplerToken: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDopplerAuthSecretRefDopplerToken


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderDopplerAuthSecretRefDopplerToken:
    r"""
    The DopplerToken is used for authentication.
    See https://docs.doppler.com/reference/api#authentication for auth token types.
    The Key attribute defaults to dopplerToken if not specified.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderFake:
    r"""
    Fake configures a store with static key/value pairs

    Attributes
    ----------
    data : [SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderFakeDataItems0], default is Undefined, required
        data
    """


    data: [SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderFakeDataItems0]


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderFakeDataItems0:
    r"""
    spaces upbound io v1alpha1 shared secret store spec provider fake data items0

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    value : str, default is Undefined, optional
        value
    valueMap : {str:str}, default is Undefined, optional
        Deprecated: ValueMap is deprecated and is intended to be removed in the future, use the `value` field instead.
    version : str, default is Undefined, optional
        version
    """


    key: str

    value?: str

    valueMap?: {str:str}

    version?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGcpsm:
    r"""
    GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider

    Attributes
    ----------
    auth : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGcpsmAuth, default is Undefined, optional
        auth
    projectID : str, default is Undefined, optional
        ProjectID project where secret is located
    """


    auth?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGcpsmAuth

    projectID?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGcpsmAuth:
    r"""
    Auth defines the information necessary to authenticate against GCP

    Attributes
    ----------
    secretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGcpsmAuthSecretRef, default is Undefined, optional
        secret ref
    workloadIdentity : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGcpsmAuthWorkloadIdentity, default is Undefined, optional
        workload identity
    """


    secretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGcpsmAuthSecretRef

    workloadIdentity?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGcpsmAuthWorkloadIdentity


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGcpsmAuthSecretRef:
    r"""
    spaces upbound io v1alpha1 shared secret store spec provider gcpsm auth secret ref

    Attributes
    ----------
    secretAccessKeySecretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef, default is Undefined, optional
        secret access key secret ref
    """


    secretAccessKeySecretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef:
    r"""
    The SecretAccessKey is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGcpsmAuthWorkloadIdentity:
    r"""
    spaces upbound io v1alpha1 shared secret store spec provider gcpsm auth workload identity

    Attributes
    ----------
    clusterLocation : str, default is Undefined, required
        cluster location
    clusterName : str, default is Undefined, required
        cluster name
    clusterProjectID : str, default is Undefined, optional
        cluster project ID
    serviceAccountRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef, default is Undefined, required
        service account ref
    """


    clusterLocation: str

    clusterName: str

    clusterProjectID?: str

    serviceAccountRef: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef:
    r"""
    A reference to a ServiceAccount resource.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGitlab:
    r"""
    GitLab configures this store to sync secrets using GitLab Variables provider

    Attributes
    ----------
    auth : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGitlabAuth, default is Undefined, required
        auth
    environment : str, default is Undefined, optional
        Environment environment_scope of gitlab CI/CD variables (Please see https://docs.gitlab.com/ee/ci/environments/#create-a-static-environment on how to create environments)
    groupIDs : [str], default is Undefined, optional
        GroupIDs specify, which gitlab groups to pull secrets from. Group secrets are read from left to right followed by the project variables.
    inheritFromGroups : bool, default is Undefined, optional
        InheritFromGroups specifies whether parent groups should be discovered and checked for secrets.
    projectID : str, default is Undefined, optional
        ProjectID specifies a project where secrets are located.
    url : str, default is Undefined, optional
        URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
    """


    auth: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGitlabAuth

    environment?: str

    groupIDs?: [str]

    inheritFromGroups?: bool

    projectID?: str

    url?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGitlabAuth:
    r"""
    Auth configures how secret-manager authenticates with a GitLab instance.

    Attributes
    ----------
    SecretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGitlabAuthSecretRef, default is Undefined, required
        secret ref
    """


    SecretRef: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGitlabAuthSecretRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGitlabAuthSecretRef:
    r"""
    spaces upbound io v1alpha1 shared secret store spec provider gitlab auth secret ref

    Attributes
    ----------
    accessToken : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGitlabAuthSecretRefAccessToken, default is Undefined, optional
        access token
    """


    accessToken?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGitlabAuthSecretRefAccessToken


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderGitlabAuthSecretRefAccessToken:
    r"""
    AccessToken is used for authentication.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderIbm:
    r"""
    IBM configures this store to sync secrets using IBM Cloud provider

    Attributes
    ----------
    auth : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderIbmAuth, default is Undefined, required
        auth
    serviceUrl : str, default is Undefined, optional
        ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
    """


    auth: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderIbmAuth

    serviceUrl?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderIbmAuth:
    r"""
    Auth configures how secret-manager authenticates with the IBM secrets manager.

    Attributes
    ----------
    containerAuth : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderIbmAuthContainerAuth, default is Undefined, optional
        container auth
    secretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderIbmAuthSecretRef, default is Undefined, optional
        secret ref
    """


    containerAuth?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderIbmAuthContainerAuth

    secretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderIbmAuthSecretRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderIbmAuthContainerAuth:
    r"""
    IBM Container-based auth with IAM Trusted Profile.

    Attributes
    ----------
    iamEndpoint : str, default is Undefined, optional
        iam endpoint
    profile : str, default is Undefined, required
        the IBM Trusted Profile
    tokenLocation : str, default is Undefined, optional
        Location the token is mounted on the pod
    """


    iamEndpoint?: str

    profile: str

    tokenLocation?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderIbmAuthSecretRef:
    r"""
    spaces upbound io v1alpha1 shared secret store spec provider ibm auth secret ref

    Attributes
    ----------
    secretApiKeySecretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderIbmAuthSecretRefSecretAPIKeySecretRef, default is Undefined, optional
        secret Api key secret ref
    """


    secretApiKeySecretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderIbmAuthSecretRefSecretAPIKeySecretRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderIbmAuthSecretRefSecretAPIKeySecretRef:
    r"""
    The SecretAccessKey is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKeepersecurity:
    r"""
    KeeperSecurity configures this store to sync secrets using the KeeperSecurity provider

    Attributes
    ----------
    authRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKeepersecurityAuthRef, default is Undefined, required
        auth ref
    folderID : str, default is Undefined, required
        folder ID
    """


    authRef: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKeepersecurityAuthRef

    folderID: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKeepersecurityAuthRef:
    r"""
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetes:
    r"""
    Kubernetes configures this store to sync secrets using a Kubernetes cluster provider

    Attributes
    ----------
    auth : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesAuth, default is Undefined, required
        auth
    remoteNamespace : str, default is "default", optional
        Remote namespace to fetch the secrets from
    server : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesServer, default is Undefined, optional
        server
    """


    auth: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesAuth

    remoteNamespace?: str = "default"

    server?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesServer


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesAuth:
    r"""
    Auth configures how secret-manager authenticates with a Kubernetes instance.

    Attributes
    ----------
    cert : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesAuthCert, default is Undefined, optional
        cert
    serviceAccount : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesAuthServiceAccount, default is Undefined, optional
        service account
    token : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesAuthToken, default is Undefined, optional
        token
    """


    cert?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesAuthCert

    serviceAccount?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesAuthServiceAccount

    token?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesAuthToken


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesAuthCert:
    r"""
    has both clientCert and clientKey as secretKeySelector

    Attributes
    ----------
    clientCert : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesAuthCertClientCert, default is Undefined, optional
        client cert
    clientKey : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesAuthCertClientKey, default is Undefined, optional
        client key
    """


    clientCert?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesAuthCertClientCert

    clientKey?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesAuthCertClientKey


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesAuthCertClientCert:
    r"""
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesAuthCertClientKey:
    r"""
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesAuthServiceAccount:
    r"""
    points to a service account that should be used for authentication

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesAuthToken:
    r"""
    use static token to authenticate with

    Attributes
    ----------
    bearerToken : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesAuthTokenBearerToken, default is Undefined, optional
        bearer token
    """


    bearerToken?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesAuthTokenBearerToken


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesAuthTokenBearerToken:
    r"""
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesServer:
    r"""
    configures the Kubernetes server Address.

    Attributes
    ----------
    caBundle : str, default is Undefined, optional
        CABundle is a base64-encoded CA certificate
    caProvider : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesServerCaProvider, default is Undefined, optional
        ca provider
    url : str, default is "kubernetes.default", optional
        configures the Kubernetes server Address.
    """


    caBundle?: str

    caProvider?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesServerCaProvider

    url?: str = "kubernetes.default"


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderKubernetesServerCaProvider:
    r"""
    see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key where the CA certificate can be found in the Secret or ConfigMap.
    name : str, default is Undefined, required
        The name of the object located at the provider type.
    namespace : str, default is Undefined, optional
        The namespace the Provider type is in.
        Can only be defined when used in a ClusterSecretStore.
    $type : str, default is Undefined, required
        The type of provider to use such as "Secret", or "ConfigMap".
    """


    key?: str

    name: str

    namespace?: str

    $type: "Secret" | "ConfigMap"


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOnepassword:
    r"""
    OnePassword configures this store to sync secrets using the 1Password Cloud provider

    Attributes
    ----------
    auth : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOnepasswordAuth, default is Undefined, required
        auth
    connectHost : str, default is Undefined, required
        ConnectHost defines the OnePassword Connect Server to connect to
    vaults : {str:int}, default is Undefined, required
        Vaults defines which OnePassword vaults to search in which order
    """


    auth: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOnepasswordAuth

    connectHost: str

    vaults: {str:int}


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOnepasswordAuth:
    r"""
    Auth defines the information necessary to authenticate against OnePassword Connect Server

    Attributes
    ----------
    secretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOnepasswordAuthSecretRef, default is Undefined, required
        secret ref
    """


    secretRef: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOnepasswordAuthSecretRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOnepasswordAuthSecretRef:
    r"""
    OnePasswordAuthSecretRef holds secret references for 1Password credentials.

    Attributes
    ----------
    connectTokenSecretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef, default is Undefined, required
        connect token secret ref
    """


    connectTokenSecretRef: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef:
    r"""
    The ConnectToken is used for authentication to a 1Password Connect Server.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOracle:
    r"""
    Oracle configures this store to sync secrets using Oracle Vault provider

    Attributes
    ----------
    auth : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOracleAuth, default is Undefined, optional
        auth
    compartment : str, default is Undefined, optional
        Compartment is the vault compartment OCID.
        Required for PushSecret
    encryptionKey : str, default is Undefined, optional
        EncryptionKey is the OCID of the encryption key within the vault.
        Required for PushSecret
    principalType : str, default is Undefined, optional
        The type of principal to use for authentication. If left blank, the Auth struct will
        determine the principal type. This optional field must be specified if using
        workload identity.
    region : str, default is Undefined, required
        Region is the region where vault is located.
    serviceAccountRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOracleServiceAccountRef, default is Undefined, optional
        service account ref
    vault : str, default is Undefined, required
        Vault is the vault's OCID of the specific vault where secret is located.
    """


    auth?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOracleAuth

    compartment?: str

    encryptionKey?: str

    principalType?: "" | "UserPrincipal" | "InstancePrincipal" | "Workload"

    region: str

    serviceAccountRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOracleServiceAccountRef

    vault: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOracleAuth:
    r"""
    Auth configures how secret-manager authenticates with the Oracle Vault.
    If empty, use the instance principal, otherwise the user credentials specified in Auth.

    Attributes
    ----------
    secretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOracleAuthSecretRef, default is Undefined, required
        secret ref
    tenancy : str, default is Undefined, required
        Tenancy is the tenancy OCID where user is located.
    user : str, default is Undefined, required
        User is an access OCID specific to the account.
    """


    secretRef: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOracleAuthSecretRef

    tenancy: str

    user: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOracleAuthSecretRef:
    r"""
    SecretRef to pass through sensitive information.

    Attributes
    ----------
    fingerprint : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOracleAuthSecretRefFingerprint, default is Undefined, required
        fingerprint
    privatekey : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOracleAuthSecretRefPrivatekey, default is Undefined, required
        privatekey
    """


    fingerprint: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOracleAuthSecretRefFingerprint

    privatekey: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOracleAuthSecretRefPrivatekey


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOracleAuthSecretRefFingerprint:
    r"""
    Fingerprint is the fingerprint of the API private key.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOracleAuthSecretRefPrivatekey:
    r"""
    PrivateKey is the user's API Signing Key in PEM format, used for authentication.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderOracleServiceAccountRef:
    r"""
    ServiceAccountRef specified the service account
    that should be used when authenticating with WorkloadIdentity.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderScaleway:
    r"""
    Scaleway

    Attributes
    ----------
    accessKey : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderScalewayAccessKey, default is Undefined, required
        access key
    apiUrl : str, default is Undefined, optional
        APIURL is the url of the api to use. Defaults to https://api.scaleway.com
    projectId : str, default is Undefined, required
        ProjectID is the id of your project, which you can find in the console: https://console.scaleway.com/project/settings
    region : str, default is Undefined, required
        Region where your secrets are located: https://developers.scaleway.com/en/quickstart/#region-and-zone
    secretKey : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderScalewaySecretKey, default is Undefined, required
        secret key
    """


    accessKey: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderScalewayAccessKey

    apiUrl?: str

    projectId: str

    region: str

    secretKey: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderScalewaySecretKey


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderScalewayAccessKey:
    r"""
    AccessKey is the non-secret part of the api key.

    Attributes
    ----------
    secretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderScalewayAccessKeySecretRef, default is Undefined, optional
        secret ref
    value : str, default is Undefined, optional
        Value can be specified directly to set a value without using a secret.
    """


    secretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderScalewayAccessKeySecretRef

    value?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderScalewayAccessKeySecretRef:
    r"""
    SecretRef references a key in a secret that will be used as value.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderScalewaySecretKey:
    r"""
    SecretKey is the non-secret part of the api key.

    Attributes
    ----------
    secretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderScalewaySecretKeySecretRef, default is Undefined, optional
        secret ref
    value : str, default is Undefined, optional
        Value can be specified directly to set a value without using a secret.
    """


    secretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderScalewaySecretKeySecretRef

    value?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderScalewaySecretKeySecretRef:
    r"""
    SecretRef references a key in a secret that will be used as value.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderSenhasegura:
    r"""
    Senhasegura configures this store to sync secrets using senhasegura provider

    Attributes
    ----------
    auth : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderSenhaseguraAuth, default is Undefined, required
        auth
    ignoreSslCertificate : bool, default is Undefined, optional
        IgnoreSslCertificate defines if SSL certificate must be ignored
    module : str, default is Undefined, required
        Module defines which senhasegura module should be used to get secrets
    url : str, default is Undefined, required
        URL of senhasegura
    """


    auth: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderSenhaseguraAuth

    ignoreSslCertificate?: bool = False

    module: str

    url: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderSenhaseguraAuth:
    r"""
    Auth defines parameters to authenticate in senhasegura

    Attributes
    ----------
    clientId : str, default is Undefined, required
        client Id
    clientSecretSecretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef, default is Undefined, required
        client secret secret ref
    """


    clientId: str

    clientSecretSecretRef: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef:
    r"""
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderUpboundspaces:
    r"""
    UpboundProvider configures a store to sync secrets with Upbound Spaces.

    Attributes
    ----------
    storeRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderUpboundspacesStoreRef, default is Undefined, required
        store ref
    """


    storeRef: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderUpboundspacesStoreRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderUpboundspacesStoreRef:
    r"""
    StoreRef holds ref to Upbound Spaces secret store

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret store on Upbound Spaces
    """


    name: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVault:
    r"""
    Vault configures this store to sync secrets using Hashi provider

    Attributes
    ----------
    auth : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuth, default is Undefined, required
        auth
    caBundle : str, default is Undefined, optional
        PEM encoded CA bundle used to validate Vault server certificate. Only used
        if the Server URL is using HTTPS protocol. This parameter is ignored for
        plain HTTP protocol connection. If not set the system root certificates
        are used to validate the TLS connection.
    caProvider : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultCaProvider, default is Undefined, optional
        ca provider
    forwardInconsistent : bool, default is Undefined, optional
        ForwardInconsistent tells Vault to forward read-after-write requests to the Vault
        leader instead of simply retrying within a loop. This can increase performance if
        the option is enabled serverside.
        https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
    namespace : str, default is Undefined, optional
        Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows
        Vault environments to support Secure Multi-tenancy. e.g: "ns1".
        More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
    path : str, default is Undefined, optional
        Path is the mount path of the Vault KV backend endpoint, e.g:
        "secret". The v2 KV secret engine version specific "/data" path suffix
        for fetching secrets from Vault is optional and will be appended
        if not present in specified path.
    readYourWrites : bool, default is Undefined, optional
        ReadYourWrites ensures isolated read-after-write semantics by
        providing discovered cluster replication states in each request.
        More information about eventual consistency in Vault can be found here
        https://www.vaultproject.io/docs/enterprise/consistency
    server : str, default is Undefined, required
        Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
    version : str, default is "v2", optional
        Version is the Vault KV secret engine version. This can be either "v1" or
        "v2". Version defaults to "v2".
    """


    auth: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuth

    caBundle?: str

    caProvider?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultCaProvider

    forwardInconsistent?: bool

    namespace?: str

    path?: str

    readYourWrites?: bool

    server: str

    version?: "v1" | "v2" = "v2"


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuth:
    r"""
    Auth configures how secret-manager authenticates with the Vault server.

    Attributes
    ----------
    appRole : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthAppRole, default is Undefined, optional
        app role
    cert : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthCert, default is Undefined, optional
        cert
    iam : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthIam, default is Undefined, optional
        iam
    jwt : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthJwt, default is Undefined, optional
        jwt
    kubernetes : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthKubernetes, default is Undefined, optional
        kubernetes
    ldap : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthLdap, default is Undefined, optional
        ldap
    tokenSecretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthTokenSecretRef, default is Undefined, optional
        token secret ref
    userPass : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthUserPass, default is Undefined, optional
        user pass
    """


    appRole?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthAppRole

    cert?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthCert

    iam?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthIam

    jwt?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthJwt

    kubernetes?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthKubernetes

    ldap?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthLdap

    tokenSecretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthTokenSecretRef

    userPass?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthUserPass


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthAppRole:
    r"""
    AppRole authenticates with Vault using the App Role auth mechanism,
    with the role and secret stored in a Kubernetes Secret resource.

    Attributes
    ----------
    path : str, default is "approle", required
        Path where the App Role authentication backend is mounted
        in Vault, e.g: "approle"
    roleId : str, default is Undefined, optional
        RoleID configured in the App Role authentication backend when setting
        up the authentication backend in Vault.
    roleRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthAppRoleRoleRef, default is Undefined, optional
        role ref
    secretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthAppRoleSecretRef, default is Undefined, required
        secret ref
    """


    path: str = "approle"

    roleId?: str

    roleRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthAppRoleRoleRef

    secretRef: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthAppRoleSecretRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthAppRoleRoleRef:
    r"""
    Reference to a key in a Secret that contains the App Role ID used
    to authenticate with Vault.
    The `key` field must be specified and denotes which entry within the Secret
    resource is used as the app role id.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthAppRoleSecretRef:
    r"""
    Reference to a key in a Secret that contains the App Role secret used
    to authenticate with Vault.
    The `key` field must be specified and denotes which entry within the Secret
    resource is used as the app role secret.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthCert:
    r"""
    Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
    Cert authentication method

    Attributes
    ----------
    clientCert : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthCertClientCert, default is Undefined, optional
        client cert
    secretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthCertSecretRef, default is Undefined, optional
        secret ref
    """


    clientCert?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthCertClientCert

    secretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthCertSecretRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthCertClientCert:
    r"""
    ClientCert is a certificate to authenticate using the Cert Vault
    authentication method

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthCertSecretRef:
    r"""
    SecretRef to a key in a Secret resource containing client private key to
    authenticate with Vault using the Cert authentication method

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthIam:
    r"""
    Iam authenticates with vault by passing a special AWS request signed with AWS IAM credentials
    AWS IAM authentication method

    Attributes
    ----------
    externalID : str, default is Undefined, optional
        AWS External ID set on assumed IAM roles
    jwt : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthIamJwt, default is Undefined, optional
        jwt
    path : str, default is Undefined, optional
        Path where the AWS auth method is enabled in Vault, e.g: "aws"
    region : str, default is Undefined, optional
        AWS region
    role : str, default is Undefined, optional
        This is the AWS role to be assumed before talking to vault
    secretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthIamSecretRef, default is Undefined, optional
        secret ref
    vaultAwsIamServerID : str, default is Undefined, optional
        X-Vault-AWS-IAM-Server-ID is an additional header used by Vault IAM auth method to mitigate against different types of replay attacks. More details here: https://developer.hashicorp.com/vault/docs/auth/aws
    vaultRole : str, default is Undefined, required
        Vault Role. In vault, a role describes an identity with a set of permissions, groups, or policies you want to attach a user of the secrets engine
    """


    externalID?: str

    jwt?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthIamJwt

    path?: str

    region?: str

    role?: str

    secretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthIamSecretRef

    vaultAwsIamServerID?: str

    vaultRole: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthIamJwt:
    r"""
    Specify a service account with IRSA enabled

    Attributes
    ----------
    serviceAccountRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef, default is Undefined, optional
        service account ref
    """


    serviceAccountRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef:
    r"""
    A reference to a ServiceAccount resource.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthIamSecretRef:
    r"""
    Specify credentials in a Secret object

    Attributes
    ----------
    accessKeyIDSecretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef, default is Undefined, optional
        access key ID secret ref
    secretAccessKeySecretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef, default is Undefined, optional
        secret access key secret ref
    sessionTokenSecretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef, default is Undefined, optional
        session token secret ref
    """


    accessKeyIDSecretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef

    secretAccessKeySecretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef

    sessionTokenSecretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef:
    r"""
    The AccessKeyID is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef:
    r"""
    The SecretAccessKey is used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef:
    r"""
    The SessionToken used for authentication
    This must be defined if AccessKeyID and SecretAccessKey are temporary credentials
    see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthJwt:
    r"""
    Jwt authenticates with Vault by passing role and JWT token using the
    JWT/OIDC authentication method

    Attributes
    ----------
    kubernetesServiceAccountToken : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken, default is Undefined, optional
        kubernetes service account token
    path : str, default is "jwt", required
        Path where the JWT authentication backend is mounted
        in Vault, e.g: "jwt"
    role : str, default is Undefined, optional
        Role is a JWT role to authenticate using the JWT/OIDC Vault
        authentication method
    secretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthJwtSecretRef, default is Undefined, optional
        secret ref
    """


    kubernetesServiceAccountToken?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken

    path: str = "jwt"

    role?: str

    secretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthJwtSecretRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken:
    r"""
    Optional ServiceAccountToken specifies the Kubernetes service account for which to request
    a token for with the `TokenRequest` API.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Optional audiences field that will be used to request a temporary Kubernetes service
        account token for the service account referenced by `serviceAccountRef`.
        Defaults to a single audience `vault` it not specified.
        Deprecated: use serviceAccountRef.Audiences instead
    expirationSeconds : int, default is Undefined, optional
        Optional expiration time in seconds that will be used to request a temporary
        Kubernetes service account token for the service account referenced by
        `serviceAccountRef`.
        Deprecated: this will be removed in the future.
        Defaults to 10 minutes.
    serviceAccountRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef, default is Undefined, required
        service account ref
    """


    audiences?: [str]

    expirationSeconds?: int

    serviceAccountRef: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef:
    r"""
    Service account field containing the name of a kubernetes ServiceAccount.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthJwtSecretRef:
    r"""
    Optional SecretRef that refers to a key in a Secret resource containing JWT token to
    authenticate with Vault using the JWT/OIDC authentication method.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthKubernetes:
    r"""
    Kubernetes authenticates with Vault by passing the ServiceAccount
    token stored in the named Secret resource to the Vault server.

    Attributes
    ----------
    mountPath : str, default is "kubernetes", required
        Path where the Kubernetes authentication backend is mounted in Vault, e.g:
        "kubernetes"
    role : str, default is Undefined, required
        A required field containing the Vault Role to assume. A Role binds a
        Kubernetes ServiceAccount with a set of Vault policies.
    secretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthKubernetesSecretRef, default is Undefined, optional
        secret ref
    serviceAccountRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef, default is Undefined, optional
        service account ref
    """


    mountPath: str = "kubernetes"

    role: str

    secretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthKubernetesSecretRef

    serviceAccountRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthKubernetesSecretRef:
    r"""
    Optional secret field containing a Kubernetes ServiceAccount JWT used
    for authenticating with Vault. If a name is specified without a key,
    `token` is the default. If one is not specified, the one bound to
    the controller will be used.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef:
    r"""
    Optional service account field containing the name of a kubernetes ServiceAccount.
    If the service account is specified, the service account secret token JWT will be used
    for authenticating with Vault. If the service account selector is not supplied,
    the secretRef will be used instead.

    Attributes
    ----------
    audiences : [str], default is Undefined, optional
        Audience specifies the `aud` claim for the service account token
        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
        then this audiences will be appended to the list
    name : str, default is Undefined, required
        The name of the ServiceAccount resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    audiences?: [str]

    name: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthLdap:
    r"""
    Ldap authenticates with Vault by passing username/password pair using
    the LDAP authentication method

    Attributes
    ----------
    path : str, default is "ldap", required
        Path where the LDAP authentication backend is mounted
        in Vault, e.g: "ldap"
    secretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthLdapSecretRef, default is Undefined, optional
        secret ref
    username : str, default is Undefined, required
        Username is a LDAP user name used to authenticate using the LDAP Vault
        authentication method
    """


    path: str = "ldap"

    secretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthLdapSecretRef

    username: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthLdapSecretRef:
    r"""
    SecretRef to a key in a Secret resource containing password for the LDAP
    user used to authenticate with Vault using the LDAP authentication
    method

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthTokenSecretRef:
    r"""
    TokenSecretRef authenticates with Vault by presenting a token.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthUserPass:
    r"""
    UserPass authenticates with Vault by passing username/password pair

    Attributes
    ----------
    path : str, default is "user", required
        Path where the UserPassword authentication backend is mounted
        in Vault, e.g: "user"
    secretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthUserPassSecretRef, default is Undefined, optional
        secret ref
    username : str, default is Undefined, required
        Username is a user name used to authenticate using the UserPass Vault
        authentication method
    """


    path: str = "user"

    secretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthUserPassSecretRef

    username: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultAuthUserPassSecretRef:
    r"""
    SecretRef to a key in a Secret resource containing password for the
    user used to authenticate with Vault using the UserPass authentication
    method

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderVaultCaProvider:
    r"""
    The provider for the CA bundle to use to validate Vault server certificate.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key where the CA certificate can be found in the Secret or ConfigMap.
    name : str, default is Undefined, required
        The name of the object located at the provider type.
    namespace : str, default is Undefined, optional
        The namespace the Provider type is in.
        Can only be defined when used in a ClusterSecretStore.
    $type : str, default is Undefined, required
        The type of provider to use such as "Secret", or "ConfigMap".
    """


    key?: str

    name: str

    namespace?: str

    $type: "Secret" | "ConfigMap"


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderWebhook:
    r"""
    Webhook configures this store to sync secrets using a generic templated webhook

    Attributes
    ----------
    body : str, default is Undefined, optional
        Body
    caBundle : str, default is Undefined, optional
        PEM encoded CA bundle used to validate webhook server certificate. Only used
        if the Server URL is using HTTPS protocol. This parameter is ignored for
        plain HTTP protocol connection. If not set the system root certificates
        are used to validate the TLS connection.
    caProvider : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderWebhookCaProvider, default is Undefined, optional
        ca provider
    headers : {str:str}, default is Undefined, optional
        Headers
    method : str, default is Undefined, optional
        Webhook Method
    result : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderWebhookResult, default is Undefined, required
        result
    secrets : [SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderWebhookSecretsItems0], default is Undefined, optional
        Secrets to fill in templates
        These secrets will be passed to the templating function as key value pairs under the given name
    timeout : str, default is Undefined, optional
        Timeout
    url : str, default is Undefined, required
        Webhook url to call
    """


    body?: str

    caBundle?: str

    caProvider?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderWebhookCaProvider

    headers?: {str:str}

    method?: str

    result: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderWebhookResult

    secrets?: [SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderWebhookSecretsItems0]

    timeout?: str

    url: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderWebhookCaProvider:
    r"""
    The provider for the CA bundle to use to validate webhook server certificate.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key the value inside of the provider type to use, only used with "Secret" type
    name : str, default is Undefined, required
        The name of the object located at the provider type.
    namespace : str, default is Undefined, optional
        The namespace the Provider type is in.
    $type : str, default is Undefined, required
        The type of provider to use such as "Secret", or "ConfigMap".
    """


    key?: str

    name: str

    namespace?: str

    $type: "Secret" | "ConfigMap"


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderWebhookResult:
    r"""
    Result formatting

    Attributes
    ----------
    jsonPath : str, default is Undefined, optional
        Json path of return value
    """


    jsonPath?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderWebhookSecretsItems0:
    r"""
    spaces upbound io v1alpha1 shared secret store spec provider webhook secrets items0

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of this secret in templates
    secretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderWebhookSecretsItems0SecretRef, default is Undefined, required
        secret ref
    """


    name: str

    secretRef: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderWebhookSecretsItems0SecretRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderWebhookSecretsItems0SecretRef:
    r"""
    Secret ref to fill in credentials

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexcertificatemanager:
    r"""
    YandexCertificateManager configures this store to sync secrets using Yandex Certificate Manager provider

    Attributes
    ----------
    apiEndpoint : str, default is Undefined, optional
        Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
    auth : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexcertificatemanagerAuth, default is Undefined, required
        auth
    caProvider : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexcertificatemanagerCaProvider, default is Undefined, optional
        ca provider
    """


    apiEndpoint?: str

    auth: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexcertificatemanagerAuth

    caProvider?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexcertificatemanagerCaProvider


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexcertificatemanagerAuth:
    r"""
    Auth defines the information necessary to authenticate against Yandex Certificate Manager

    Attributes
    ----------
    authorizedKeySecretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef, default is Undefined, optional
        authorized key secret ref
    """


    authorizedKeySecretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef:
    r"""
    The authorized key used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexcertificatemanagerCaProvider:
    r"""
    The provider for the CA bundle to use to validate Yandex.Cloud server certificate.

    Attributes
    ----------
    certSecretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef, default is Undefined, optional
        cert secret ref
    """


    certSecretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef:
    r"""
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexlockbox:
    r"""
    YandexLockbox configures this store to sync secrets using Yandex Lockbox provider

    Attributes
    ----------
    apiEndpoint : str, default is Undefined, optional
        Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
    auth : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexlockboxAuth, default is Undefined, required
        auth
    caProvider : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexlockboxCaProvider, default is Undefined, optional
        ca provider
    """


    apiEndpoint?: str

    auth: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexlockboxAuth

    caProvider?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexlockboxCaProvider


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexlockboxAuth:
    r"""
    Auth defines the information necessary to authenticate against Yandex Lockbox

    Attributes
    ----------
    authorizedKeySecretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef, default is Undefined, optional
        authorized key secret ref
    """


    authorizedKeySecretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef:
    r"""
    The authorized key used for authentication

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexlockboxCaProvider:
    r"""
    The provider for the CA bundle to use to validate Yandex.Cloud server certificate.

    Attributes
    ----------
    certSecretRef : SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef, default is Undefined, optional
        cert secret ref
    """


    certSecretRef?: SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef:
    r"""
    A reference to a specific 'key' within a Secret resource,
    In some instances, `key` is a required field.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
        defaulted, in others it may be required.
    name : str, default is Undefined, optional
        The name of the Secret resource being referred to.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
        to the namespace of the referent.
    """


    key?: str

    name?: str

    namespace?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecRetrySettings:
    r"""
    Used to configure http retries if failed.

    Attributes
    ----------
    maxRetries : int, default is Undefined, optional
        max retries
    retryInterval : str, default is Undefined, optional
        retry interval
    """


    maxRetries?: int

    retryInterval?: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreSpecSecretStoreMetadata:
    r"""
    The metadata of the secret store to be created.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations that are set on projected resource.
    labels : {str:str}, default is Undefined, optional
        Labels that are set on projected resource.
    """


    annotations?: {str:str}

    labels?: {str:str}


schema SpacesUpboundIoV1alpha1SharedSecretStoreStatus:
    r"""
    SharedSecretStoreStatus defines the observed state of the SecretStore.

    Attributes
    ----------
    conditions : [SpacesUpboundIoV1alpha1SharedSecretStoreStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    failed : [SpacesUpboundIoV1alpha1SharedSecretStoreStatusFailedItems0], default is Undefined, optional
        List of provisioning failures.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    provisioned : [SpacesUpboundIoV1alpha1SharedSecretStoreStatusProvisionedItems0], default is Undefined, optional
        List of successfully provisioned targets.
    """


    conditions?: [SpacesUpboundIoV1alpha1SharedSecretStoreStatusConditionsItems0]

    failed?: [SpacesUpboundIoV1alpha1SharedSecretStoreStatusFailedItems0]

    observedGeneration?: int

    provisioned?: [SpacesUpboundIoV1alpha1SharedSecretStoreStatusProvisionedItems0]


schema SpacesUpboundIoV1alpha1SharedSecretStoreStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreStatusFailedItems0:
    r"""
    SecretStoreProvisioningFailure defines secret store provisioning failure.

    Attributes
    ----------
    conditions : [SpacesUpboundIoV1alpha1SharedSecretStoreStatusFailedItems0ConditionsItems0], default is Undefined, optional
        List of occurred conditions.
    controlPlane : str, default is Undefined, required
        ControlPlane name where the failure occurred.
    """


    conditions?: [SpacesUpboundIoV1alpha1SharedSecretStoreStatusFailedItems0ConditionsItems0]

    controlPlane: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreStatusFailedItems0ConditionsItems0:
    r"""
    spaces upbound io v1alpha1 shared secret store status failed items0 conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        last transition time
    message : str, default is Undefined, optional
        message
    reason : str, default is Undefined, optional
        reason
    status : str, default is Undefined, required
        status
    $type : str, default is Undefined, required
        type
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema SpacesUpboundIoV1alpha1SharedSecretStoreStatusProvisionedItems0:
    r"""
    SecretStoreProvisioningSuccess defines secret store provision success.

    Attributes
    ----------
    controlPlane : str, default is Undefined, required
        ControlPlane name where the secret store got projected
    """


    controlPlane: str


